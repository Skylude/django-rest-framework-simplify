# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1
jobs:
  build:
    docker:
      - image: cimg/python:3.11.2
        environment:
          TEST_DATABASE_URL: postgresql://postgres@localhost/circle_test
      - image: cimg/postgres:12.8
        environment:
          POSTGRES_USER=postgres

    working_directory: ~/django-rest-framework-simplify

    steps:
      - checkout

      - run: sudo apt-get update
      - run: |
          sudo apt-get install postgresql-client
          createuser test -h localhost -U postgres -d
          createdb -h localhost -U postgres drfsimp -O test
          createdb -h localhost -U postgres drfsimp_rr -O test

      # need to install pyodbc dependency
      #- run:
      #    name: pyodbc dependency
      #    command: |
      #      sudo apt-get install software-properties-common python-software-properties
      #      sudo apt-get update
     #      sudo apt-get install python3-dev unixodbc unixodbc-dev unixodbc-bin tdsodbc libstdc++6 libffi-dev libgss3 freetds-dev
      #      tar -xvzf ~/django-rest-framework-simplify/deps/msodbcsql-13.0.0.0.tar.gz
      #      sed -i 's/uname \-p/uname \-m/g' ~/django-rest-framework-simplify/msodbcsql-13.0.0.0/build_dm.sh
      #      ~/django-rest-framework-simplify/msodbcsql-13.0.0.0/build_dm.sh --accept-warning
      #      cd /tmp/$(ls /tmp | grep unixODBC)/unixODBC-2.3.1&& sudo make install
      #      sed -i 's/uname \-p/uname \-m/g' ~/django-rest-framework-simplify/msodbcsql-13.0.0.0/install.sh
      #      cd ~/django-rest-framework-simplify/msodbcsql-13.0.0.0&& sudo ./install.sh install --accept-license
      #      sudo ln -s /usr/lib64/libodbcinst.so.2 /lib/x86_64-linux-gnu/libodbcinst.so.2

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: Install FreeTDS
          command: |
            sudo apt-get update && sudo apt-get install freetds-dev libssl-dev

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: run migrations
          command: |
            . venv/bin/activate
            python manage.py migrate
            python manage.py migrate --database=readreplica

      # run tests!
      - run:
          name: run tests
          command: |
            mkdir xunit
            . venv/bin/activate
            python manage.py test

      # deploy to pypi
      - deploy:
          name: PyPi Deploy
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              sudo pip install --upgrade pip
              sudo pip install twine
              python setup.py sdist
              twine upload --username __token__ --password "${PYPI_API_TOKEN}" dist/*
            fi
