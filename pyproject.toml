[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = 'django-rest-framework-simplify'
version = '1.5.1.dev1'
description = 'Django Rest Framework Simplify'
readme = "README.md"
requires-python = ">=3.8"
license = { file = "LICENSE.md" }
authors = [{ email = 'skylercain@gmail.com' }, { name = "Skyler Cain" }]
classifiers = ["Programming Language :: Python"]
dependencies = [
  "appdirs==1.4.0",
  "blinker==1.4",
  "Django>=3.2,<4.0",
  "djangorestframework",
  "pycryptodome",
  "pyparsing==2.1.10",
  "python-dateutil",
  "pytz",
  "requests==2.13.0",
  "six",
]

[project.optional-dependencies]
pgdb = ["psycopg2<2.9"]
mssql = ["pymssql"]
mongo = [
  "bson==0.4.2",
  "pymongo<4.0",
  "mongoengine>=0.9.0",
]
tools = [
  "build",
  "coverage",
  "pre-commit",
  "ruff",
]
dev = ["django-rest-framework-simplify[mssql, tools]"]

[project.urls]
repository = "https://github.com/Skylude/django-rest-framework-simplify"
changelog = "https://github.com/Skylude/django-rest-framework-simplify/blob/master/CHANGELOG.md"

[tool.setuptools.packages.find]
where = ["."]
include = ["rest_framework_simplify*"]
exclude = ["*tests*"]

[tool.ruff]
select = [
  "AIR",    # Airflow
  "ASYNC",  # flake8-async
  "B",      # flake8-bugbear
  "C4",     # flake8-comprehensions
  "C90",    # McCabe cyclomatic complexity
  "CPY",    # flake8-copyright
  "DJ",     # flake8-django
  "E",      # pycodestyle
  "EXE",    # flake8-executable
  "F",      # Pyflakes
  "FLY",    # flynt
  "FURB",   # refurb
  "G",      # flake8-logging-format
  "I",      # isort
  "ICN",    # flake8-import-conventions
  "INP",    # flake8-no-pep420
  "INT",    # flake8-gettext
  "ISC",    # flake8-implicit-str-concat
  "NPY",    # NumPy-specific rules
  "PD",     # pandas-vet
  "PERF",   # Perflint
  "PGH",    # pygrep-hooks
  "PIE",    # flake8-pie
  "PL",     # Pylint
  "PYI",    # flake8-pyi
  "RUF",    # Ruff-specific rules
  "SLOT",   # flake8-slots
  "T10",    # flake8-debugger
  "T20",    # flake8-print
  "TCH",    # flake8-type-checking
  "TID",    # flake8-tidy-imports
  "W",      # pycodestyle
  "YTT",    # flake8-2020
  # "A",    # flake8-builtins
  # "ANN",  # flake8-annotations
  # "ARG",  # flake8-unused-arguments
  # "BLE",  # flake8-blind-except
  # "COM",  # flake8-commas
  # "D",    # pydocstyle
  # "DTZ",  # flake8-datetimez
  # "EM",   # flake8-errmsg
  # "ERA",  # eradicate
  # "FA",   # flake8-future-annotations
  # "FBT",  # flake8-boolean-trap
  # "FIX",  # flake8-fixme
  # "N",    # pep8-naming
  # "PT",   # flake8-pytest-style
  # "PTH",  # flake8-use-pathlib
  # "Q",    # flake8-quotes
  # "RET",  # flake8-return
  # "RSE",  # flake8-raise
  # "S",    # flake8-bandit
  # "SIM",  # flake8-simplify
  # "SLF",  # flake8-self
  # "TD",   # flake8-todos
  # "TRY",  # tryceratops
  "UP",   # pyupgrade
]
ignore = [
  "B028",
  "B904",
  "PGH004",
 ]
target-version = "py38"

[tool.ruff.isort]
force-single-line = true
known-first-party = ["storages"]
